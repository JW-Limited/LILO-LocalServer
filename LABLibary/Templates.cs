using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LABLibary
{
    public class Templates
    {
        public class Forms
        {
            public string nameSpace = string.Empty;

            public Forms(string _namespace)
            {
                this.nameSpace = _namespace;
            }

            public string Basic()
            {
                var code = new StringBuilder();

                code.AppendLine("using System;");
                code.AppendLine("using System.Windows.Forms;");
                code.AppendLine("using Systen.Text;\n");
                code.AppendLine(String.Format("//autogenerated by LAB \nnamespace {0}", nameSpace));
                code.AppendLine(
                    "{ \r\n    partial class Form1 : Form\r\n    { \r\n        public Form1() \r\n        { \r\n            InitializeComponent(); \r\n        } \r\n    } \r\n}");
                return code.ToString();
            }

            public string Designer()
            {
                var code = new StringBuilder();
                code.AppendLine(String.Format("//autogenerated by LAB \nnamespace {0}", nameSpace));
                code.AppendLine(("{\r\n    partial class Form1\r\n    {\r\n        /// <summary>\r\n        /// Required designer variable.\r\n        /// </summary>\r\n        private System.ComponentModel.IContainer components = null;\r\n\r\n        /// <summary>\r\n        /// Clean up any resources being used.\r\n        /// </summary>\r\n        /// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>\r\n        protected override void Dispose(bool disposing)\r\n        {\r\n            if (disposing && (components != null))\r\n            {\r\n                components.Dispose();\r\n            }\r\n            base.Dispose(disposing);\r\n        }\r\n\r\n        private void InitializeComponent()\r\n        {\r\n\r\n\r\n        }\r\n\r\n    }\r\n}"));
                return code.ToString();
            }
        }
    }
}
